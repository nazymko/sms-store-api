<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.7.0.xsd">
    <!-- Configure the database connection here -->
    <jdbc>
        <driver>com.mysql.jdbc.Driver</driver>
        <url>jdbc:mysql://localhost:3306/moneygraph</url>
        <user>root</user>
        <password>0000</password>
    </jdbc>

    <generator>
        <!-- The default code generator. You can override this one, to generate your own code style.
             Supported generators:
             - org.jooq.util.JavaGenerator
             - org.jooq.util.ScalaGenerator
             Defaults to org.jooq.util.JavaGenerator -->
        <name>org.jooq.util.JavaGenerator</name>

        <strategy>
            <name>org.nazymko.moneygraph.storage.gen.OpinionsCodeStrategy</name>
        </strategy>
        <generate>
            <pojos>true</pojos>
            <daos>true</daos>
        </generate>
        <database>
            <!-- The database type. The format here is:
                 org.util.[database].[database]Database -->
            <name>org.jooq.util.mysql.MySQLDatabase</name>

            <!-- The database schema (or in the absence of schema support, in your RDBMS this
                 can be the owner, user, database name) to be generated -->
            <inputSchema>moneygraph</inputSchema>

            <!-- All elements that are generated from your schema
                 (A Java regular expression. Use the pipe to separate several expressions)
                 Watch out for case-sensitivity. Depending on your database, this might be important! -->
            <includes>.*</includes>

            <!-- All elements that are excluded from your schema
                 (A Java regular expression. Use the pipe to separate several expressions).
                 Excludes match before includes -->
            <excludes></excludes>

            <customTypes>

            </customTypes>
            <!-- Associate data type rewrites with database columns -->
            <forcedTypes>
                <!--any table-->
                <forcedType>
                    <name>BOOLEAN</name>
                    <expression>.*\.is_.*</expression>
                    <types>.*</types>
                </forcedType>
            </forcedTypes>
        </database>

        <target>
            <!-- The destination package of your generated classes (within the destination directory) -->
            <packageName>org.nazymko.moneygraph.storage.dao.autodao</packageName>

            <!-- The destination directory of your generated classes -->
            <directory>C:\Users\nazymko\IdeaProjects\sms-store-api\src\main\java\</directory>
        </target>
    </generator>
</configuration>